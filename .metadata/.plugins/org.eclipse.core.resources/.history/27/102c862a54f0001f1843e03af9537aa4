/*
 * package com.Students.Details.portlet;
 * 
 * import com.Students.Details.constants.StudentsWebPortletKeys; import
 * com.Students.Details.service.DetailsLocalService; import
 * com.liferay.portal.kernel.portlet.bridges.mvc.MVCActionCommand; import
 * com.liferay.portal.kernel.service.ServiceContext; import
 * com.liferay.portal.kernel.service.ServiceContextFactory; import
 * com.liferay.portal.kernel.servlet.SessionErrors; import
 * com.liferay.portal.kernel.servlet.SessionMessages; import
 * com.liferay.portal.kernel.util.ParamUtil;
 * 
 * import javax.portlet.ActionRequest; import javax.portlet.ActionResponse;
 * import javax.portlet.PortletException; import
 * org.osgi.service.component.annotations.Component; import
 * org.osgi.service.component.annotations.Reference;
 * 
 * @Component( immediate = true, property = { "javax.portlet.name=" +
 * StudentsWebPortletKeys.STUDENTSWEB, "mvc.command.name=/add_student" },
 * service = MVCActionCommand.class ) public class
 * StudentsAddingMVCActionCommand implements MVCActionCommand {
 * 
 * 
 * @Reference private DetailsLocalService _detailsLocalService;
 * 
 * @Override public boolean processAction(ActionRequest actionRequest,
 * ActionResponse actionResponse) throws PortletException { try { // Retrieve
 * form parameters int studentId = (int) ParamUtil.getLong(actionRequest,
 * "studentId"); String studentName = ParamUtil.getString(actionRequest,
 * "studentName"); int departmentId = (int) ParamUtil.getLong(actionRequest,
 * "departmentId");
 * 
 * // Get the service context ServiceContext serviceContext =
 * ServiceContextFactory.getInstance(actionRequest);
 * 
 * _detailsLocalService.createStudent(studentId, studentName, departmentId);
 * 
 * // DetailsLocalServiceBaseImpl // Call service layer to add student (Assuming
 * StudentServiceUtil exists) // StudentServiceUtil.addStudent(studentId,
 * studentName, departmentId, serviceContext);
 * 
 * // Success message SessionMessages.add(actionRequest,
 * "student-added-success");
 * 
 * } catch (Exception e) { SessionErrors.add(actionRequest,
 * "error-adding-student"); }
 * 
 * // Redirect back to the student list page return false; } }
 */



package com.Students.Details.portlet;

import com.Students.Details.constants.StudentsWebPortletKeys;
import com.Students.Details.service.DetailsLocalService;
import com.liferay.portal.kernel.portlet.bridges.mvc.MVCActionCommand;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.ServiceContextFactory;
import com.liferay.portal.kernel.servlet.SessionErrors;
import com.liferay.portal.kernel.servlet.SessionMessages;
import com.liferay.portal.kernel.util.ParamUtil;
import com.liferay.portal.kernel.log.Log;
import com.liferay.portal.kernel.log.LogFactoryUtil;

import javax.portlet.ActionRequest;
import javax.portlet.ActionResponse;
import javax.portlet.PortletException;

import org.osgi.service.component.annotations.Component;
import org.osgi.service.component.annotations.Reference;

@Component(
    immediate = true,
    property = {
        "javax.portlet.name=" + StudentsWebPortletKeys.STUDENTSWEB,
        "mvc.command.name=/add_student"
    },
    service = MVCActionCommand.class
)
public class StudentsAddingMVCActionCommand implements MVCActionCommand {

    private static final Log _log = LogFactoryUtil.getLog(StudentsAddingMVCActionCommand.class);

    @Reference
    private DetailsLocalService _detailsLocalService;

    @Override
    public boolean processAction(ActionRequest actionRequest, ActionResponse actionResponse) throws PortletException {
        try {
            // Retrieve form parameters
            int studentId = ParamUtil.getInteger(actionRequest, "studentId");
            String studentName = ParamUtil.getString(actionRequest, "studentName");
            int departmentId = ParamUtil.getInteger(actionRequest, "departmentId");

            // Get the service context
            ServiceContext serviceContext = ServiceContextFactory.getInstance(actionRequest);

            // Call service layer method to save data in DB
            _detailsLocalService.createStudent(studentId, studentName, departmentId);

            // Log success
            _log.info("Student successfully created: " + studentName);

            // Success message
            SessionMessages.add(actionRequest, "student-added-success");

            return true;  // Indicate successful processing

        } catch (Exception e) {
            _log.error("Error adding student", e);
            SessionErrors.add(actionRequest, "error-adding-student");
            return false;  // Indicate failure
        }
    }
}

