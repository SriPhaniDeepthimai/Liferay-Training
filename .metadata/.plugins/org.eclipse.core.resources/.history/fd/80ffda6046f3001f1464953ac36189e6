package com.Students.Details.portlet;

import com.Students.Details.service.DetailsLocalService;
import com.Students.Details.constants.StudentsWebPortletKeys;
import com.Students.Details.model.Details;
import com.liferay.portal.kernel.log.Log;
import com.liferay.portal.kernel.log.LogFactoryUtil;
import com.liferay.portal.kernel.portlet.bridges.mvc.MVCRenderCommand;
import com.liferay.portal.kernel.util.ParamUtil;

import org.osgi.service.component.annotations.Component;
import org.osgi.service.component.annotations.Reference;

import javax.portlet.RenderRequest;
import javax.portlet.RenderResponse;
import java.util.List;

@Component(
    immediate = true,
    property = {
        "javax.portlet.name=" + StudentsWebPortletKeys.STUDENTSWEB,
        "mvc.command.name=/view_students",
    	"mvc.command.name=/search_students"
    },
    service = MVCRenderCommand.class
)
public class StudentsViewMVCRenderCommand implements MVCRenderCommand {

    private static final Log _log = LogFactoryUtil.getLog(StudentsViewMVCRenderCommand.class);

    @Reference
    private DetailsLocalService _detailsLocalService;

    @Override
    public String render(RenderRequest renderRequest, RenderResponse renderResponse) {
        _log.info("Executing StudentsViewMVCRenderCommand...");

        try {
            // Get department ID from request parameters
            int departmentId = ParamUtil.getInteger(renderRequest, "departmentId", -1);
            List<Details> students;

            if (departmentId != -1) {
                // If departmentId is provided, fetch search results
                _log.info("Fetching students for Department ID: " + departmentId);
                students = _detailsLocalService.getStudentsByDepartment(departmentId);
            } else {
                // If no search parameter, fetch all students
                _log.info("No search parameter provided. Fetching all students.");
                students = _detailsLocalService.getDetailses(0, _detailsLocalService.getDetailsesCount());
            }

            renderRequest.setAttribute("students", students);
        } catch (Exception e) {
            _log.error("Error fetching student details: ", e);
        }

        return "/showstudents.jsp";
    }
}
